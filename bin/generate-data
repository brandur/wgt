#!/usr/bin/env ruby

require "excon"
require "json"

def artist_info(name)
  resp = CONN.get(
    expects: 200,
    path: "/api/v4/artist/profile",
    query: {
      api_key: API_KEY,
      bucket:  [
        "artist_location",
        "familiarity",
        "genre",
        "songs",
        "urls",
        "video",
      ],
      format:  "json",
      name:    name,
    }
  )
  info = JSON.load(resp.body, nil, symbolize_names: true)[:response][:artist]
  if info
    location = info[:artist_location]
    sample = info.fetch(:video, {}).detect { |v| v[:site] == "youtube.com" }

    {
      familiarity:     info[:familiarity],
      genres:          info.fetch(:genres, {}).map { |g| g[:name] }.sort,
      location: location ? {
        city:          location[:city],
        country:       location[:country],
      } : nil,
      name:            info[:name],
      popular_songs:   info.fetch(:songs, {}).map { |s| s[:title] }.
        uniq { |s| s.downcase }[0, 3].sort,
      sample:          sample ? sample[:url] : nil,
      urls: {
        home_url:      info.fetch(:urls, {})[:official_url],
        wikipedia_url: info.fetch(:urls, {})[:wikipedia_url],
      },
    }
  else
    $stderr.puts "not found: #{name}"
    nil
  end
rescue Excon::Errors::Error
  if $!.response.status == 429
    $stderr.puts "rate limited; sleeping"
    sleep(5)
    retry
  else
    $stderr.puts "error status: #{$!.response.status}"
    $stderr.puts "error body: #{$!.response.body}"
    abort("unexpected HTTP response")
  end
end

API_KEY = ENV["ECHO_NEST_API_KEY"] || abort("need ECHO_NEST_API_KEY")
CONN = Excon.new("https://developer.echonest.com")

contents = ARGF.read
artists = contents.each_line.map { |n| artist_info(n) }.
  compact.
  sort_by { |i| i[:name] }
puts JSON.dump(artists)
